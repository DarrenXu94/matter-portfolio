<div class="top-canvas">
  <div id="canvas"></div>

  <h1>Darren Xu</h1>
</div>

<script>
  import Matter from "matter-js";

  var Engine = Matter.Engine,
    Render = Matter.Render,
    Runner = Matter.Runner,
    Composites = Matter.Composites,
    Common = Matter.Common,
    Events = Matter.Events,
    MouseConstraint = Matter.MouseConstraint,
    Mouse = Matter.Mouse,
    Composite = Matter.Composite,
    Bodies = Matter.Bodies;

  // create engine
  var engine = Engine.create({
      enableSleeping: true,
    }),
    world = engine.world;

  // create renderer
  var render = Render.create({
    element: document.getElementById("canvas"),
    engine: engine,

    options: {
      width: window.innerWidth,
      // height: 600,
      wireframes: false,
    },
  });

  Render.run(render);

  // create runner
  var runner = Runner.create();
  Runner.run(runner, engine);

  const options = {
    isStatic: true,
    render: {
      visible: false,
    },
  };

  // add bodies
  Composite.add(world, [
    // walls
    Bodies.rectangle(400, 0, window.innerWidth * 2, 50, options),
    Bodies.rectangle(400, 600, window.innerWidth * 2, 50, options),
    Bodies.rectangle(window.innerWidth, 300, 50, 600, options),
    Bodies.rectangle(0, 300, 50, 600, options),
  ]);

  const IMG_SIZE = 512 / 2;

  var stack = Composites.stack(
    window.innerWidth / 3 - 100,
    50,
    10,
    4,
    0,
    0,
    function (x: number, y: number) {
      const size = Common.random(20, 50);
      const scale = size / IMG_SIZE;
      return Bodies.circle(x, y, size, {
        render: {
          sprite: {
            texture: "./awake.png",
            xScale: scale,
            yScale: scale,
          },
        },
      });
    }
  );

  Composite.add(world, stack);

  // sleep events
  for (var i = 0; i < stack.bodies.length; i++) {
    Events.on(stack.bodies[i], "sleepStart sleepEnd", function (event: any) {
      var body = this;

      if (body.isSleeping) {
        body.render.sprite.texture = "./sleeping.png";
      } else {
        body.render.sprite.texture = "./awake.png";
      }
    });
  }

  // add mouse control
  var mouse = Mouse.create(render.canvas),
    mouseConstraint = MouseConstraint.create(engine, {
      mouse: mouse,
      constraint: {
        stiffness: 0.2,
        render: {
          visible: false,
        },
      },
    });

  Composite.add(world, mouseConstraint);

  // keep the mouse in sync with rendering
  render.mouse = mouse;

  // fit the render viewport to the scene
  Render.lookAt(render, {
    min: { x: 0, y: 0 },
    max: { x: window.innerWidth - 100, y: 600 },
  });
</script>
<style>
  .top-canvas {
    position: relative;
    overflow: hidden;
  }
  .top-canvas h1 {
    font-size: 5rem;
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
</style>
