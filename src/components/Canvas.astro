<div class="top-canvas">
  <div id="canvas"></div>

  <h1>Darren Xu</h1>
</div>

<script>
  import Matter from "matter-js";

  var Engine = Matter.Engine,
    Render = Matter.Render,
    Runner = Matter.Runner,
    Composites = Matter.Composites,
    Common = Matter.Common,
    Events = Matter.Events,
    MouseConstraint = Matter.MouseConstraint,
    Mouse = Matter.Mouse,
    Composite = Matter.Composite,
    Bodies = Matter.Bodies;

  // create engine
  var engine = Engine.create({
      enableSleeping: true,
    }),
    world = engine.world;

  // create renderer
  var render = Render.create({
    element: document.getElementById("canvas"),
    engine: engine,

    options: {
      width: window.innerWidth,
      // height: 600,
      wireframes: false,
    },
  });

  Render.run(render);

  // create runner
  var runner = Runner.create();
  Runner.run(runner, engine);

  // add bodies
  Composite.add(world, [
    // walls
    Bodies.rectangle(400, 0, window.innerWidth + 500, 50, {
      isStatic: true,
      render: {
        visible: false,
      },
    }),
    Bodies.rectangle(400, 600, window.innerWidth + 500, 50, {
      isStatic: true,
      render: {
        visible: false,
      },
    }),
    Bodies.rectangle(window.innerWidth, 300, 50, 600, {
      isStatic: true,
      render: {
        visible: false,
      },
    }),
    Bodies.rectangle(0, 300, 50, 600, {
      isStatic: true,
      render: {
        visible: false,
      },
    }),
  ]);

  var stack = Composites.stack(
    50,
    50,
    18,
    3,
    0,
    0,
    function (x: number, y: number) {
      switch (Math.round(Common.random(0, 1))) {
        case 0:
          if (Common.random() < 0.8) {
            return Bodies.rectangle(
              x,
              y,
              Common.random(20, 50),
              Common.random(20, 50),
              {
                render: {
                  strokeStyle: "#ffffff",

                  sprite: {
                    texture: "./test.png",
                  },
                },
              }
            );
          } else {
            return Bodies.rectangle(
              x,
              y,
              Common.random(80, 120),
              Common.random(20, 30),
              {
                render: {
                  strokeStyle: "#ffffff",

                  sprite: {
                    texture: "./test.png",
                  },
                },
              }
            );
          }
        case 1:
          return Bodies.polygon(
            x,
            y,
            Math.round(Common.random(1, 8)),
            Common.random(20, 50),
            {
              render: {
                sprite: {
                  texture: "./test.png",
                },
              },
            }
          );
      }
    }
  );

  Composite.add(world, stack);

  /*
    // sleep events
    for (var i = 0; i < stack.bodies.length; i++) {
        Events.on(stack.bodies[i], 'sleepStart sleepEnd', function(event) {
            var body = this;
            console.log('body id', body.id, 'sleeping:', body.isSleeping);
        });
    }
    */

  // add mouse control
  var mouse = Mouse.create(render.canvas),
    mouseConstraint = MouseConstraint.create(engine, {
      mouse: mouse,
      constraint: {
        stiffness: 0.2,
        render: {
          visible: false,
        },
      },
    });

  Composite.add(world, mouseConstraint);

  // keep the mouse in sync with rendering
  render.mouse = mouse;

  // fit the render viewport to the scene
  Render.lookAt(render, {
    min: { x: 0, y: 0 },
    max: { x: window.innerWidth, y: 600 },
  });
</script>
<style>
  .top-canvas {
    position: relative;
  }
  .top-canvas h1 {
    font-size: 5rem;
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
</style>
